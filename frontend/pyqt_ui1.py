# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'pyqt_ui.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
sys.path.append("C:\\Users\\Nitin Rana\\Desktop\\MD_47")

import AiVirtualMouseProject as ai
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(500, 400)
        MainWindow.setMinimumSize(QtCore.QSize(500, 400))
        MainWindow.setMaximumSize(QtCore.QSize(500, 400))
        MainWindow.setStyleSheet(
            "background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:1 rgba(255, 255, 255, 255));"
        )
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.slider = QtWidgets.QSlider(self.centralwidget)
        self.slider.setGeometry(QtCore.QRect(180, 50, 160, 21))
        self.slider.setMouseTracking(False)
        self.slider.setStyleSheet("border-radius:10px;\n" "background:rgba(0,0,0,0)")
        self.slider.setMinimum(1)
        self.slider.setSliderPosition(1)
        self.slider.setOrientation(QtCore.Qt.Horizontal)
        self.slider.setTickPosition(QtWidgets.QSlider.NoTicks)
        self.slider.setObjectName("slider")
        self.slider.valueChanged.connect(self.sValue)

        self.startBtn = QtWidgets.QPushButton(self.centralwidget)
        self.startBtn.setGeometry(QtCore.QRect(200, 110, 93, 31))
        font = QtGui.QFont()
        font.setFamily("Segoe UI Variable Text Semibold")
        font.setPointSize(10)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.startBtn.setFont(font)
        self.startBtn.setStyleSheet(
            "border-radius: 12px;\n"
            "background:rgba(223,223,223,1);\n"
            "border:2px solid black;\n"
            ""
        )
        self.startBtn.setObjectName("startBtn")
        self.startBtn.clicked.connect(self.startEvt)

        self.adjustSens = QtWidgets.QLabel(self.centralwidget)
        self.adjustSens.setGeometry(QtCore.QRect(30, 43, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Malgun Gothic")
        font.setPointSize(10)
        self.adjustSens.setFont(font)
        self.adjustSens.setStyleSheet(
            "border:none;\n" "color:rgba(255,255,255,1);\n" "background:rgba(0,0,0,0)"
        )
        self.adjustSens.setObjectName("adjustSens")
        self.gridWidget = QtWidgets.QWidget(self.centralwidget)
        self.gridWidget.setGeometry(QtCore.QRect(0, 250, 381, 61))
        self.gridWidget.setStyleSheet("background:rgba(0,0,0,0);\n" "padding:0")
        self.gridWidget.setObjectName("gridWidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.gridWidget)
        self.gridLayout_2.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.gridLayout_2.setContentsMargins(10, 0, 0, 0)
        self.gridLayout_2.setHorizontalSpacing(6)
        self.gridLayout_2.setVerticalSpacing(9)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.closeWinCb = QtWidgets.QCheckBox(self.gridWidget)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.closeWinCb.setFont(font)
        self.closeWinCb.setStyleSheet("color:white;\n" "margin:0")
        self.closeWinCb.setObjectName("closeWinCb")
        self.closeWinCb.stateChanged.connect(self.closeWinEvt)

        self.gridLayout_2.addWidget(self.closeWinCb, 4, 0, 1, 1)
        self.invScrCb = QtWidgets.QCheckBox(self.gridWidget)
        font = QtGui.QFont()
        font.setPointSize(9)
        font.setBold(False)
        font.setWeight(50)
        self.invScrCb.setFont(font)
        self.invScrCb.setAutoFillBackground(False)
        self.invScrCb.setStyleSheet("color:white;\n" "padding:0")
        self.invScrCb.setObjectName("invScrCb")
        self.invScrCb.stateChanged.connect(self.invSEvt)

        self.gridLayout_2.addWidget(self.invScrCb, 3, 0, 1, 1)
        self.horz_line = QtWidgets.QFrame(self.gridWidget)
        self.horz_line.setFrameShape(QtWidgets.QFrame.HLine)
        self.horz_line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.horz_line.setObjectName("horz_line")
        self.gridLayout_2.addWidget(self.horz_line, 0, 0, 1, 1)
        self.sliderVal = QtWidgets.QLabel(self.centralwidget)
        self.sliderVal.setGeometry(QtCore.QRect(360, 50, 41, 21))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(9)
        self.sliderVal.setFont(font)
        self.sliderVal.setStyleSheet(
            'font: 75 10pt "MS Shell Dlg 2";\n' "background:rgba(0,0,0,0)"
        )
        self.sliderVal.setObjectName("sliderVal")
        self.quitBtn = QtWidgets.QPushButton(self.centralwidget)
        self.quitBtn.setGeometry(QtCore.QRect(410, 317, 61, 31))
        self.quitBtn.setStyleSheet(
            "background-color:rgba(138,138,139,1);\n"
            "border-radius:10px;\n"
            "border-style:inset;\n"
            "border-color:black;\n"
            "border-width:1px;\n"
            "color:white;\n"
            "font:bold 15px"
        )
        self.quitBtn.setObjectName("quitBtn")
        self.quitBtn.clicked.connect(self.quitEvt)

        self.configFingerLabel = QtWidgets.QLabel(self.centralwidget)
        self.configFingerLabel.setGeometry(QtCore.QRect(100, 216, 181, 25))
        self.configFingerLabel.setMaximumSize(QtCore.QSize(16777215, 25))
        font = QtGui.QFont()
        font.setPointSize(7)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.configFingerLabel.setFont(font)
        self.configFingerLabel.setStyleSheet(
            "color:white;\n" "background:rgba(0,0,0,0)\n" ""
        )
        self.configFingerLabel.setObjectName("configFingerLabel")
        self.dropDown = QtWidgets.QComboBox(self.centralwidget)
        self.dropDown.setEnabled(True)
        self.dropDown.setGeometry(QtCore.QRect(10, 220, 80, 20))
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred
        )
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dropDown.sizePolicy().hasHeightForWidth())
        self.dropDown.setSizePolicy(sizePolicy)
        self.dropDown.setMaximumSize(QtCore.QSize(80, 20))
        self.dropDown.setAccessibleName("")
        self.dropDown.setStyleSheet("background:rgba(223,223,223,1);\n" "margin:0;\n" "padding-left:5px")
        self.dropDown.setEditable(False)
        self.dropDown.setObjectName("dropDown")
        self.dropDown.addItem("")
        self.dropDown.addItem("")
        self.dropDown.addItem("")
        self.dropDown.activated[str].connect(self.dropDownEvt)

        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(0, 180, 501, 20))
        self.line.setStyleSheet("color:white")
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridWidget.raise_()
        self.slider.raise_()
        self.startBtn.raise_()
        self.adjustSens.raise_()
        self.sliderVal.raise_()
        self.quitBtn.raise_()
        self.configFingerLabel.raise_()
        self.dropDown.raise_()
        self.line.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 500, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.actiondfddfd = QtWidgets.QAction(MainWindow)
        self.actiondfddfd.setObjectName("actiondfddfd")

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.startBtn.setText(_translate("MainWindow", "Start"))
        self.adjustSens.setText(_translate("MainWindow", "Adjust senstivity :"))
        self.closeWinCb.setText(
            _translate("MainWindow", "Close window when all fingers are up")
        )
        self.invScrCb.setText(_translate("MainWindow", "Invert the screen"))
        self.sliderVal.setText(_translate("MainWindow", "1"))
        self.quitBtn.setText(_translate("MainWindow", "Quit"))
        self.configFingerLabel.setText(
            _translate("MainWindow", "Configure finger for left click")
        )
        self.dropDown.setCurrentText(_translate("MainWindow", "thumb"))
        self.dropDown.setItemText(0, _translate("MainWindow", "thumb"))
        self.dropDown.setItemText(1, _translate("MainWindow", "ring finger"))
        self.dropDown.setItemText(2, _translate("MainWindow", "lil finger"))
        self.actiondfddfd.setText(_translate("MainWindow", "dfddfd"))
    
    # slider event
    def sValue(self):
        value = self.slider.value()
        self.sliderVal.setText(str(value))
        return value
    
    # quit button event
    def quitEvt(self):
        QtWidgets.qApp.quit()

    # inv screen
    invS = False
    def invSEvt(self):
        if self.invScrCb.isChecked():
            self.invS = True
            print("t")
        else: 
            self.invS = False
            print("f")
    
    # close win with fingers
    closeW = False
    def closeWinEvt(self):
        if self.closeWinCb.isChecked():
            self.closeW = True
            print("t")
        else: 
            self.closeW = False
            print("f")

    # drop down event
    clickFinger = 0
    def dropDownEvt(self, opt):
        if opt=="thumb":
            self.clickFinger = 0
        elif opt == "ring finger":
            self.clickFinger = 3
        else: self.clickFinger = 4
    
    # start button event
    def startEvt(self):
        mouse = ai.AiMouse(self.sValue(), self.closeW, self.clickFinger, self.invS)
        mouse.run()

    


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
